#!/bin/bash

: ${REPO_PATH:="$PWD"}
: ${REPO_NAME:=$(basename "$REPO_PATH")}
: ${BACKUP_FILENAME:="$HOME/Dropbox/Documents/$REPO_NAME.git.tar.gz.gpg"}

TMP_DIR=$(mktemp -d -t git-backup.XXX)
trap "rm -rf \"$TMP_DIR\"" EXIT


function clone-to-bare-repo() {
  mkdir "$TMP_DIR/blank-template"
  git clone --quiet --bare --template="$TMP_DIR/blank-template" -- \
    "$REPO_PATH" "$TMP_DIR/$REPO_NAME.git"
}

function clean-bare-repo() {
  ( cd -- "$TMP_DIR/$REPO_NAME.git" &&
    git config --unset core.filemode &&
    git remote rm origin &&
    git --bare gc --quiet &&
    git --bare pack-refs --all --prune &&
    { rm info/refs
      rmdir info
      rm objects/info/packs
      rmdir objects/info
      rmdir refs/heads
      rmdir refs/tags
      rmdir rr-cache
    } 2>/dev/null
  )
}

function verify-bare-repo() {
  git clone --quiet -- "$REPO_PATH" "$TMP_DIR/clone"
}

function encrypt-to() {
  filename="$1"

  tmpfile="$TMP_DIR/gpg-out"
  gpg --encrypt --symmetric - > "$tmpfile" &&
    mv -- "$tmpfile" "$filename"
}

function create-encrypted-backup() {
  tar -C "$TMP_DIR" -cz -- "$REPO_NAME.git" |
    encrypt-to "$BACKUP_FILENAME"
}


clone-to-bare-repo &&
  clean-bare-repo &&
  verify-bare-repo &&
  create-encrypted-backup &&
  { echo "Backed up $REPO_NAME:"
    ls -l -- "$BACKUP_FILENAME"
  }
